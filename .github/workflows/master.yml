# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "master" branch
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
    inputs:
      runAndroidTests:
        description: "Run Android Tests"
        required: true
        default: false
        type: boolean

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: '11'

      # Runs a single command using the runners shell
      - name: Build APK
        uses: gradle/gradle-build-action@v2
        with:
          arguments: :app:assembleDebug
        
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: '11'
      - name: Lint
        uses: gradle/gradle-build-action@v2
        with:
          arguments: lint
      - name: Uploading lint results
        uses: actions/upload-artifact@v3
        with:
          name: lint-reports
          path: '**/lint-results-*.html'
        
  detekt:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: '11'
      - name: Detekt
        uses: gradle/gradle-build-action@v2
        with:
          arguments: detektDebug
      - name: Uploading detekt results
        uses: actions/upload-artifact@v3
        with:
          name: detekt-reports
          path: '**/detekt.html'
        
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: '11'
      - name: Unit test and coverage
        uses: gradle/gradle-build-action@v2
        with:
          arguments: jacocoTestReport
      - name: Uploading test results
        uses: actions/upload-artifact@v3
        with:
          name: test-reports
          path: '**/reports/tests/testDebugUnitTest/'
      - name: Uploading test coverage
        uses: actions/upload-artifact@v3
        with:
          name: test-coverage-report
          path: '**/reports/jacoco/jacocoTestReport/html/'

  android-test:
    needs: build
    if: ${{ inputs.runAndroidTests }}
    runs-on: macOS-latest
  
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: '11'
      - name: Build AndroidTest app
        uses: gradle/gradle-build-action@v2
        with:
          arguments: packageDebug
      - name: Run Instrumented Tests on GMD
        run: ./gradlew pixel2api31DebugAndroidTest -Pandroid.testoptions.manageddevices.emulator.gpu="swiftshader_indirect"
      - name: Upload Android test reports
        uses: actions/upload-artifact@v3
        with:
          name: android-test-reports
          path: '**/build/reports/androidTests'
    
